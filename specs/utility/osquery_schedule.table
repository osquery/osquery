table_name("osquery_schedule")
description("Information about the current queries that are scheduled in osquery.")
schema([
    Column("name", TEXT, "The given name for this query"),
    Column("query", TEXT, "The exact query to run"),
    Column("interval", INTEGER,
      "The interval in seconds to run this query, not an exact interval"),
    Column("executions", BIGINT, "Number of times the query was executed"),
    Column("last_executed", BIGINT,
      "UNIX time stamp in seconds of the last completed execution"),
    Column("denylisted", INTEGER, "1 if the query is denylisted else 0",
        aliases=["blacklisted"]), # 'blacklist' now deprecated
    Column("output_size", BIGINT,
      "Cumulative total number of bytes generated by the resultant rows of the query"),
    Column("wall_time", BIGINT, "Total wall time in seconds spent executing (deprecated), hidden=True"),
    Column("wall_time_ms", BIGINT, "Total wall time in milliseconds spent executing"),
    Column("last_wall_time_ms", BIGINT, "Wall time in milliseconds of the latest execution"),
    Column("user_time", BIGINT, "Total user time in milliseconds spent executing"),
    Column("last_user_time", BIGINT, "User time in milliseconds of the latest execution"),
    Column("system_time", BIGINT, "Total system time in milliseconds spent executing"),
    Column("last_system_time", BIGINT, "System time in milliseconds of the latest execution"),
    Column("average_memory", BIGINT, "Average of the bytes of resident memory left allocated after collecting results"),
    Column("last_memory", BIGINT, "Resident memory in bytes left allocated after collecting results of the latest execution"),
])
attributes(utility=True)
implementation("osquery@genOsquerySchedule")
